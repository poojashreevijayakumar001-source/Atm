
class Account {
    // Private attributes (Security using Access Specifiers)
    private String accountNumber;
    private String accountHolderName;
    private double balance;

    // Constructor
    public Account(String accountNumber, String accountHolderName, double initialBalance) {
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        if (initialBalance >= 0) {
            this.balance = initialBalance;
        } else {
            System.out.println("Initial balance cannot be negative. Setting balance to 0.");
            this.balance = 0;
        }
    }

    // Deposit method
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("‚úÖ Deposited: ‚Çπ" + amount);
        } else {
            System.out.println("‚ùå Deposit amount must be positive.");
        }
    }

    // Withdraw method
    public void withdraw(double amount) {
        if (amount > 0) {
            if (balance >= amount) {
                balance -= amount;
                System.out.println("‚úÖ Withdrawn: ‚Çπ" + amount);
            } else {
                System.out.println("‚ùå Insufficient balance! Withdrawal failed.");
            }
        } else {
            System.out.println("‚ùå Withdrawal amount must be positive.");
        }
    }

    // Balance check method
    public void checkBalance() {
        System.out.println("üí≥ Account Holder: " + accountHolderName);
        System.out.println("üí∞ Current Balance: ‚Çπ" + balance);
    }

    // Getter for account holder name (for security ‚Äî no direct access to sensitive details)
    public String getAccountHolderName() {
        return accountHolderName;
    }
}

// ATMSystem.java
public class ATMSystem {
    public static void main(String[] args) {
        // Create an account
        Account acc1 = new Account("1234567890", "John Doe", 5000);

        System.out.println("---- ATM SYSTEM DEMO ----");
        acc1.checkBalance();

        // Deposit money
        acc1.deposit(2000);
        acc1.checkBalance();

        // Withdraw money
        acc1.withdraw(3000);
        acc1.checkBalance();

        // Attempt to withdraw more than balance
        acc1.withdraw(7000);
        acc1.checkBalance();
    }
}
